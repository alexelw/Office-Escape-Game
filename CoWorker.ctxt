#BlueJ class context
comment0.target=CoWorker
comment0.text=\n\ CoWorker\ Class\ -\ Handles\ the\ movement,\ interaction,\ and\ animation\ of\ the\ coworker.\n\ \n\ @Alex\ Watts\n\ @version\ 1.2\n
comment1.params=pointA\ pointB
comment1.target=CoWorker(Point,\ Point)
comment1.text=\n\ Constructor\ for\ CoWorker.\n\ \n\ @param\ pointA\ The\ first\ point\ in\ the\ movement\ path.\n\ @param\ pointB\ The\ second\ point\ in\ the\ movement\ path.\n
comment2.params=
comment2.target=void\ act()
comment2.text=\n\ Main\ action\ method\ called\ every\ cycle.\n
comment3.params=chatting
comment3.target=void\ setChatting(boolean)
comment3.text=\n\ Sets\ the\ chatting\ state\ for\ the\ coworker.\n\ \n\ @param\ chatting\ true\ if\ the\ coworker\ is\ chatting,\ false\ otherwise.\n
comment4.params=
comment4.target=void\ animateTalking()
comment4.text=\n\ Starts\ the\ talking\ animation\ and\ sets\ the\ chatting\ state\ to\ true.\n
comment5.params=
comment5.target=void\ resumeMovement()
comment5.text=\n\ Resumes\ the\ movement\ of\ the\ coworker\ after\ chatting.\n
comment6.params=
comment6.target=void\ handleAnimation()
comment6.text=\n\ Handles\ the\ animation\ state\ based\ on\ the\ movement\ and\ chatting\ status.\n
comment7.params=worker
comment7.target=void\ interactWith(Worker)
comment7.text=\n\ Interacts\ with\ other\ workers\ such\ as\ TiredOfficeWorker\ and\ Boss.\n\ \n\ @param\ worker\ The\ worker\ to\ interact\ with.\n
comment8.params=
comment8.target=void\ stopMovement()
comment8.text=\n\ Stops\ the\ coworker's\ movement\ and\ triggers\ the\ chatting\ state.\n
comment9.params=
comment9.target=void\ move()
comment9.text=\n\ Moves\ the\ coworker\ using\ the\ TwoPointMovement\ strategy.\n
numComments=10
